{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMVRC0EU/JseAt8VZMGPWqi"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"g7HAWA0GGwgS"},"outputs":[],"source":["from sklearn.feature_extraction.text import TfidfVectorizer\n","from sklearn.cluster import KMeans\n","from sklearn.datasets import fetch_20newsgroups\n","data = fetch_20newsgroups(subset='all', categories=None, shuffle=True, random_state=42)\n","tfidf_vectorizer = TfidfVectorizer(max_df=0.5, min_df=2, stop_words='english')\n","tfidf = tfidf_vectorizer.fit_transform(data.data)\n","k = 20\n","means = KMeans(n_clusters=k, random_state=42)\n","kmeans.fit(tfidf)\n","print(\"Top terms per cluster:\")\n","order_centroids = kmeans.cluster_centers_.argsort()[:, ::-1]\n","terms = tfidf_vectorizer.get_feature_names()\n","for i in range(k):\n","    print(\"Cluster %d:\" % i, end='')\n","    for ind in order_centroids[i, :10]:\n","        print(' %s' % terms[ind], end='')\n","    print()\n","new_doc = [\"car engine performance\", \"computer science programming\"]\n","new_tfidf = tfidf_vectorizer.transform(new_doc)\n","predicted_cluster = kmeans.predict(new_tfidf)\n","print(\"\\nPredicted clusters for new documents:\")\n","for i, doc in enumerate(new_doc):\n","    print(\"Document:\", doc, \"- Predicted Cluster:\", predicted_cluster[i])\n"]}]}