{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOrEfD0LFcYEqJNwj7m//20"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"JpT5TP0nMMPv"},"outputs":[],"source":["import numpy as np\n","import matplotlib.pyplot as plt\n","from sklearn.model_selection import train_test_split\n","from sklearn.tree import DecisionTreeRegressor\n","np.random.seed(0)\n","X = np.sort(5 * np.random.rand(80, 1), axis=0)\n","y = np.sin(X).ravel() + np.random.normal(0, 0.1, X.shape[0])\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)\n","regressor = DecisionTreeRegressor(max_depth=5)  # You can adjust max_depth for better performance\n","regressor.fit(X_train, y_train)\n","y_pred = regressor.predict(X_test)\n","plt.figure()\n","plt.scatter(X, y, s=20, edgecolor=\"black\", c=\"darkorange\", label=\"data\")\n","plt.plot(X_test, y_pred, color=\"cornflowerblue\", label=\"max_depth=5\", linewidth=2)\n","plt.xlabel(\"data\")\n","plt.ylabel(\"target\")\n","plt.title(\"Decision Tree Regression\")\n","plt.legend()\n","plt.show()\n"]},{"cell_type":"markdown","source":["# New Section"],"metadata":{"id":"2sKa6IELNEFn"}}]}